package main

// 標準出力をする際に使うパッケージ。
import "fmt"

// コメント
/*
コメント
 */

 // セミコロンはいらないのではなくて自動的に挿入されていることに注意。

func main() {
	// 引数にとった文字列を標準出力する
	fmt.Println("GO")

	// 引数にC言語のprintf関数で使うようなフォーマットを指定して、それに対する引数を与え、標準出力する
	fmt.Printf("%d %s", 100, "dsf")

	// 標準エラー出力へ出力
	print("Go")

	// 標準エラー出力へ出力(末尾に改行追加)
	println("GO")

	// int型の変数を複数明示的に定義する
	var a, b int

	// 複数の変数に対して同時に値を代入
	a, b = 1, 2

	// 異なる型の変数を定義。
	var (
		x int
		str string
	)
	x, str = 1, "GO"

	println(a, b, x, str)

	/*暗黙的に変数を定義する
	 型の指定と代入を同時に行うことができる
	:=演算子を用いての代入は最初の一度しかできない。
	*/
	i := 1

	// 同じように以下のようにも書くことができる。
	var j = 1

	println(i, j)

	// キャスト
	n := 10
	m := byte(n)
	m += 1

	/* ラップアラウンド
		桁あふれした際にラップアラウンドさせる。
	*/
	// 255がbyte型の最大値
	by := byte(255)
	println("ラウンドアップ前", by)
	by = by + 1
	println("ラウンドアップ後", by)
}


